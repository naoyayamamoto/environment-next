name: Docker Image CI

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: ['main']
    tags: ['v*.*.*']

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-test:
    runs-on: ubuntu-latest

    name: Build and Test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('pnpm-lock.yaml') }}-${{ hashFiles('app/**/*.ts', 'app/**/*.tsx', 'components/**/*.ts', 'components/**/*.tsx', 'lib/**/*.ts', 'lib/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('pnpm-lock.yaml') }}-
            ${{ runner.os }}-nextjs-
      - uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm build

  sample:
    runs-on: ubuntu-latest
    needs: build-test
    environment: sample
    permissions:
      contents: read
      packages: write
    steps:
      - name: Docker build and push
        uses: ./.github/actions/docker
        with:
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.IMAGE_NAME }}
          prefix: sample
          value1: ${{ vars.NEXT_PUBLIC_INJECTION_VALUE }}
          value2: ${{ vars.NEXT_PUBLIC_INJECTION_VALUE2 }}
  test:
    runs-on: ubuntu-latest
    needs: build-test
    environment: test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Docker build and push
        uses: ./.github/actions/docker
        with:
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.IMAGE_NAME }}
          prefix: test
          value1: ${{ vars.NEXT_PUBLIC_INJECTION_VALUE }}
          value2: ${{ vars.NEXT_PUBLIC_INJECTION_VALUE2 }}
